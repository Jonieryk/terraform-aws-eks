name: 'Terraform EC2 deployment'

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:
  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: latest  

    - name: Terraform Init
      run: terraform init -force-copy

    - name: Terraform Plan
      run: terraform plan -input=false -var-file="demo.tfvars"

    - name: Save Plan Output
      run: terraform plan -input=false -var-file="demo.tfvars" -out=tfplan

    - name: Upload Plan
      uses: actions/upload-artifact@v3
      with:
        name: terraform-plan
        path: tfplan

  manual-approval:
    name: 'Manual Approval'
    runs-on: ubuntu-latest
    needs: terraform-plan  # Oczekuje na zako≈Ñczenie Terraform Plan
    steps:
    - name: Await Approval
      run: echo "Please approve this workflow manually in the Actions tab."
    
  terraform-apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    needs: manual-approval  # Oczekuje na zatwierdzenie
    environment: production

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: latest  

    - name: Download Plan
      uses: actions/download-artifact@v3
      with:
        name: terraform-plan
        path: .

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -input=false -auto-approve tfplan
